ALTER DATABASE postgres SET timezone TO 'Europe/Paris';

-- configuration_properties
DROP TABLE IF EXISTS configuration_properties;
CREATE TABLE configuration_properties (
  id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  archiving_date TIMESTAMP NULL,
  deletable BOOLEAN NOT NULL DEFAULT true,
  read_only BOOLEAN NOT NULL DEFAULT false,
  name VARCHAR(128) NOT NULL,
  data VARCHAR(1024) DEFAULT NULL,
  creation_date TIMESTAMP NOT NULL,
  modification_date TIMESTAMP NOT NULL,
  data_type VARCHAR(48) NOT NULL,
  data_type_def VARCHAR(255) DEFAULT NULL,
  application VARCHAR(128) DEFAULT NULL,
  scope VARCHAR(128) DEFAULT NULL,
  label VARCHAR(128) DEFAULT NULL,
  mini FLOAT8 DEFAULT NULL,
  maxi FLOAT8 DEFAULT NULL,
  default_data VARCHAR(1024) DEFAULT NULL,
  CONSTRAINT unq_configuration_properties UNIQUE (name,application,scope)
);

CREATE INDEX idx_configuration_properties_application ON configuration_properties (application);
CREATE INDEX idx_configuration_properties_archiving_date ON configuration_properties (archiving_date);
CREATE INDEX idx_configuration_properties_deletable ON configuration_properties (deletable);
CREATE INDEX idx_configuration_properties_readonly ON configuration_properties (read_only);
CREATE INDEX idx_configuration_properties_name ON configuration_properties (name);
CREATE INDEX idx_configuration_properties_type ON configuration_properties (data_type);
CREATE INDEX idx_configuration_properties_scope ON configuration_properties (scope);

-- users
DROP TABLE IF EXISTS users_properties;
DROP TABLE IF EXISTS users;
CREATE TABLE users (
  id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  archiving_date TIMESTAMP NULL,
  deletable BOOLEAN NOT NULL DEFAULT true,
  name VARCHAR(48) NOT NULL,
  display_name VARCHAR(96) NOT NULL,
  creation_date TIMESTAMP NOT NULL,
  modification_date TIMESTAMP NOT NULL,
  expiration_date TIMESTAMP DEFAULT NULL,
  last_connection_date TIMESTAMP DEFAULT NULL,
  connections_count INTEGER NOT NULL DEFAULT 0,
  email VARCHAR(255) DEFAULT NULL,
  last_ip VARCHAR(255) DEFAULT NULL,
  locked BOOLEAN NOT NULL DEFAULT false,
  password VARCHAR(48) NOT NULL,
  roles VARCHAR(512) NOT NULL DEFAULT 'GUEST',
  CONSTRAINT unq_users UNIQUE (name)
);

CREATE INDEX idx_users_deletable ON users (deletable);
CREATE INDEX idx_users_name ON users (name);
CREATE INDEX idx_users_display_name ON users (display_name);
CREATE INDEX idx_users_locked ON users (locked);
CREATE INDEX idx_users_email ON users (email);
CREATE INDEX idx_users_last_ip ON users (last_ip);

-- users_properties
CREATE TABLE IF NOT EXISTS users_properties (
  user_id BIGINT NOT NULL,
  deletable BOOLEAN NOT NULL DEFAULT true,
  read_only BOOLEAN NOT NULL DEFAULT false,
  name VARCHAR(48) NOT NULL,
  data VARCHAR(1024) DEFAULT NULL,
  data_type TEXT NOT NULL,
  data_type_def VARCHAR(255) DEFAULT NULL,
  scope VARCHAR(48) DEFAULT NULL,
  label VARCHAR(128) DEFAULT NULL,
  mini FLOAT8 DEFAULT NULL,
  maxi FLOAT8 DEFAULT NULL,
  default_data TEXT DEFAULT NULL,
  CONSTRAINT unq_users_properties UNIQUE (user_id,name,scope),
  CONSTRAINT fk_users_properties_users FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);
