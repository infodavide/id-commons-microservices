<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>org.infodavid.commons.microservices</groupId>
        <artifactId>id-commons-microservices-authentication</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.infodavid.commons.microservices.authentication</groupId>
    <artifactId>id-commons-microservices-authentication-app</artifactId>
    <packaging>jar</packaging>
    <name>Authentication application</name>
    <url>http://maven.apache.org</url>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>21</java.version>
        <m2e.apt.activation>jdt_apt</m2e.apt.activation>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.infodavid.commons</groupId>
            <artifactId>id-commons-app</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>org.infodavid.commons.microservices</groupId>
            <artifactId>id-commons-microservices-client</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.infodavid.commons</groupId>
            <artifactId>id-commons-jdbc</artifactId>
            <version>${common.version}</version>
        </dependency>
        <dependency>
            <groupId>org.infodavid.commons.authentication</groupId>
            <artifactId>id-commons-authentication-rest</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.infodavid.commons.authentication</groupId>
            <artifactId>id-commons-authentication-persistence-jpa</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.infodavid.commons.authentication</groupId>
            <artifactId>id-commons-authentication-services-impl</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!-- Test -->
        <dependency>
            <groupId>org.infodavid.commons</groupId>
            <artifactId>id-commons-tests</artifactId>
            <version>${common.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>mkdir-docker-context</id>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <echo message="Creating docker-context directory"/>
                                <delete dir="${project.basedir}/target/docker-context"/>
                                <mkdir dir="${project.basedir}/target/docker-context"/>
                                <copy todir="${project.basedir}/target/docker-context">
                                    <fileset dir="${project.basedir}/docker" includes="**/*" />
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <layers>
                        <enabled>true</enabled>
                    </layers>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                    <outputDirectory>${project.basedir}/target/docker-context</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>spring-boot-repackage</id>
                        <phase>package</phase>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <name>${company}/${project.artifactId}:${project.version}</name>
                            <build>
                                <contextDir>${project.basedir}/target/docker-context</contextDir>
                                <filter>@</filter>
                                <args>
                                    <JAR_FILE>${project.artifactId}-${project.version}.jar</JAR_FILE>
                                </args>
                                <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                            </build>
                        </image>
                    </images>
                    <verbose>true</verbose>
                </configuration>
                <executions>
                    <execution>
                        <id>docker-build</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>